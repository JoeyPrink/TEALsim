/*
 * TEALsim - MIT TEAL Project
 * Copyright (c) 2004 The Massachusetts Institute of Technology. All rights reserved.
 * Please see license.txt in top level directory for full license.
 * 
 * http://icampus.mit.edu/teal/TEALsim
 * 
 * $Id: GeneratesG.java,v 1.5 2007/07/17 15:46:52 pbailey Exp $ 
 * 
 */

package teal.physics;

import javax.vecmath.*;

/**
 * Objects that generate a Gravitational field should implement <code>
 * GeneratesG</code>.  When a <code>World</code> responds to
 * <code>getG</code> requests, it will only sum up the gravitational
 * fields of <code>GeneratesG</code> objects.
 */
public interface GeneratesG {

    /**
     * <code>getG</code> returns the gravitational field at a position
     * and time.
     *
     * @param position a <code>Vector3D</code> representing where
     * to calculate the gravitational field at.
     * @param time a <code>double</code> representing the <code>
     * World</code> time to calculate the gravitational field at.
     * @return a <code>Vector3d</code> representing the gravitational
     * field generated by this object.
     */
    Vector3d getG(Vector3d position, double time);

    /**
     * <code>getG</code> returns the gravitational field at a position
     * at the current <code>World</code> time.
     *
     * @param position a <code>Vector3D</code> representing where
     * to calculate the gravitational field.
     * @return a <code>Vector3d</code> representing the field
     */

    Vector3d getG(Vector3d position);

    /**
     * <code>isGeneratingG/code> returns whether or not you are
     * currently generating a field.
     *
     * @return <code>true</code> if currently generating a
     * field, <code>false</code> otherwise
     */
    boolean isGeneratingG();
}
