/*
 * TEALsim - MIT TEAL Project
 * Copyright (c) 2004 The Massachusetts Institute of Technology. All rights reserved.
 * Please see license.txt in top level directory for full license.
 * 
 * http://icampus.mit.edu/teal/TEALsim
 * 
 * $Id: GeneratesB.java,v 1.6 2007/07/17 15:46:54 pbailey Exp $ 
 * 
 */

package teal.physics.em;

import javax.vecmath.Vector3d;

/**
 * Objects that generate a magnetic field should implement <code>
 * GeneratesB</code>.  When a <code>World</code> responds to
 * <code>getB</code> requests, it will only sum up the magnetic
 * fields of <code>GeneratesB</code> objects.
 */
public interface GeneratesB {

    /**
     * <code>getB</code> returns the Magnetic field at a position
     * and time.
     *
     * @param position a <code>Vector3D</code> representing where
     * to calculate the magnetic field at.
     * @param time a <code>double</code> representing the <code>
     * World</code> time to calculate the magnetic field at.
     * @return a <code>Vector3d</code> representing the magnetic field
     * generated by this object.
     */
    Vector3d getB(Vector3d position, double time);

    /**
     * <code>getB</code> returns the Magnetic field at a position
     * at the current <code>World</code> time.
     *
     * @param position a <code>Vector3D</code> representing where
     * to calculate the magnetic field at.
     * @return a <code>Vector3d</code> representing the magnetic field
     */

    Vector3d getB(Vector3d position);

    double getBFlux(Vector3d position);

    /**
     * <code>isGeneratingB</code> returns whether or not you are
     * currently generating a magnetic field.
     *
     * @return <code>true</code> if currently generating a magnetic
     * field, <code>false</code> otherwise
     */
    boolean isGeneratingB();
}
